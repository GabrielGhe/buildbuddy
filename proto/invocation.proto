syntax = "proto3";

import "proto/build_event_stream.proto";
import "google/protobuf/timestamp.proto";

package invocation;

message Invocation {
    // The invocation identifier itself.
    string invocation_id = 1;

    // The ordered set of build events generated by this invocation.
    repeated InvocationEvent event = 2;

    // Whether or not the build was successful.
    bool success = 3;

    // The unix-user who performed this build.
    string user = 4;

    // The duration of this build, from start to finish.
    int64 duration_usec = 5;

    // The host this build was executed on.
    string host = 6;

    // The command performed (usually "build" or "test").
    string command = 7;

    // The build patterns specified for this build.
    repeated string pattern = 8;

    // The number of actions performed.
    int64 action_count = 9;

    enum InvocationStatus {
        UNKNOWN_INVOCATION_STATUS = 0;
        COMPLETE_INVOCATION_STATUS = 1;
        PARTIAL_INVOCATION_STATUS = 2;
    }
    InvocationStatus invocation_status = 10;
}


message InvocationEvent {
    // The time this event occurred.
    google.protobuf.Timestamp event_time = 1;

    // The bazel build event.
    build_event_stream.BuildEvent build_event = 2;

    // The sequence number of the event in the stream.
    int64 sequence_number = 3;
}

message InvocationLookup {
    // The invocation_id: a UUID generated by the bazel run.
    string invocation_id = 1;
}

message GetInvocationRequest {
    InvocationLookup lookup = 1;
}

message GetInvocationResponse {
    repeated Invocation invocation = 1;
}


message InvocationQuery {
    // The invocation_id: a UUID generated by the bazel run.
    string invocation_id = 1;
}

message SearchInvocationRequest {
    InvocationQuery query = 1;
}

message SearchInvocationResponse {
    // Note: For now, the invocations returned will not have the "event" field
    // set because it's a large amount of data. Clients that want to display
    // the full invocation should link to it or call GetInvocation directly on
    // the invocation they want to display.
    repeated Invocation invocation = 1;
}