syntax = "proto3";

package grp;

import "proto/form.proto";
import "proto/user_id.proto";

message Group {
  // The unique ID of this group.
  // Ex. "GR4576963743584254779"
  string id = 1;

  // The name of this group (may be displayed to users).
  // Ex. "Tyler Williams Group"
  string name = 2;

  // Optional. The domains owned by this group.
  // Ex. "iterationinc.com"
  string owned_domain = 3;

  // True if this group has linked a Github token.
  bool github_linked = 4;

  // Whether users from the owned domain should automatically
  // be added to the group when they sign up (defaults to false).
  //
  // Not yet implemented.
  bool auto_populate_from_owned_domain = 5;
}

message CreateGroupRequest {
  // Group initialized with required fields except for ID.
  //
  // The required fields are documented in the Group proto.
  Group group = 1;
}

message CreateGroupResponse {
  // Whether group creation was successful.
  boolean success = 1;

  // The ID of the created group.
  string group_id = 2;

  // Error messages associated with problematic form fields (if creation wasn't
  // successful).
  repeated form.FieldError errors = 3;
}

message UpdateGroupRequest {
  // Updated group fields.
  //
  // Non-editable fields are ignored.
  Group group = 1;
}

message UpdateGroupResponse {
  // Whether the group update was successful.
  boolean success = 1;

  // Error messages associated with problematic form fields (if the update
  // wasn't successful).
  repeated form.FieldError errors = 2;
}
